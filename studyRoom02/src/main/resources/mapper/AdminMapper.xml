<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.myproject.dao.AdminDao">

	<!-- 등록 정보 전처리 -->
	<sql id="regCri">
 		<trim prefix="(" suffix=") AND" prefixOverrides="OR">
			<foreach item="type" collection="typeArr">
				<trim prefix="OR" suffix="AND">
				<!-- 가나다라  -->
					<choose>
						<when test="type == 'R'.toString()">
							REGNO = #{keyword}
						</when>
						<when test="type == 'U'.toString()">
							USERNAME LIKE '%' || #{keyword} || '%'
						</when>
						<when test="type == 'F'.toString()">
							FEENAME LIKE '%' || #{keyword} || '%'
						</when>
					</choose>
				</trim>
			</foreach>
			<if test="startDate != null">
				<trim prefix="" suffix="AND" prefixOverrides="AND">
					TO_CHAR(ENDDATE,'YYMMDD') >= #{startDate}
				</trim>
			</if>
			<if test="endDate != null">
				<trim prefix="" suffix="" prefixOverrides="AND">
					TO_CHAR(STARTDATE,'YYMMDD') &lt;= #{endDate} 
				</trim>
			</if>
		</trim>
 	</sql>
	
	<!-- 결제 정보 전처리 -->
	<sql id="payCri">
 		<trim prefix="(" suffix=") AND" prefixOverrides="OR">
			<foreach item="type" collection="typeArr">
				<trim prefix="OR">
				<!-- 가나다라  -->
					<choose>
						<when test="type == 'U'.toString()">
							USERNAME LIKE '%' || #{keyword} || '%'
						</when>
						<when test="type == 'I'.toString()">
							ITEMNAME LIKE '%' || #{keyword} || '%'
						</when>
					</choose>
				</trim>
			</foreach>
			<if test="keyword != null">
				<if test="keyword != ''">
					<trim>
						AND
					</trim>
				</if>
			</if>
			<if test="startDate != null">
				<trim prefix="" suffix="AND" prefixOverrides="OR">
					TO_CHAR(PAYDATE,'YYMMDD') >= #{startDate}
				</trim>
			</if>
			<if test="endDate != null">
				<trim prefix="" suffix="" prefixOverrides="OR">
					TO_CHAR(PAYDATE,'YYMMDD') &lt;= #{endDate}
				</trim>
			</if>
		</trim>
 	</sql>
	
	
	<!-- 상품 정보 조회 -->
	<resultMap type="com.myproject.domain.RegInfoDomain" id="regInfoMap">
		<id property="userNo" column="userNo"/>
		<result property="regNo" column="regNo" />
		<result property="userNo" column="userNo" />
		<result property="userName" column="userName" />
		<result property="startDate" column="startDate" />
		<result property="endDate" column="endDate" />
		<result property="seatNo" column="seatNo" />
		<result property="fno" column="fno" />
		<result property="feeName" column="feeName" />	
		<collection property="seat" resultMap="seatMap" />	
	</resultMap>
	<resultMap type="com.myproject.domain.SeatDomain" id="seatMap">
		<result property="sno" column="sno" />
		<result property="name" column="name" />
		<result property="status" column="status" />
		<result property="userNo" column="userNo" />
	</resultMap>
	<select id="itemStatus" resultMap="regInfoMap">
		SELECT R.REGNO, R.USERNO, R.USERNAME, R.STARTDATE, R.ENDDATE, R.SEATNO, R.FNO, R.FEENAME, S.STATUS SEATSTATE
			FROM REGINFO R 
 		    FULL OUTER JOIN SEAT S 
        		ON R.USERNO = S.USERNO
	</select>
	
	<!-- 회원 목록 조회 -->
	<resultMap type="com.myproject.domain.MemberDomain" id="memberMap">
		<id property="userNo" column="userNo" />
		<result property="userNo" column="userNo"/>
		<result property="userId" column="userId"/>
		<result property="userPw" column="userPw"/>
		<result property="userName" column="userName"/>
		<result property="email" column="email"/>
		<result property="tel" column="tel"/>
		<result property="enabled" column="enabled"/>
		<collection property="address" resultMap="addressMap"></collection>
	</resultMap>
	<resultMap type="com.myproject.domain.AddressDomain" id="addressMap">
		<result property="addrNo" column="addrNo"/>
		<result property="userNo" column="userNo"/>
		<result property="post" column="post"/>
		<result property="addr" column="addr"/>
		<result property="detail" column="detail"/>
		<result property="extra" column="extra"/>
	</resultMap>
	<select id="memberList" resultMap="memberMap">
		<![CDATA[
		SELECT * FROM (
			SELECT MB.USERNO, MB.USERID, MB.USERNAME, MB.EMAIL, MB.TEL, MB.ADDR, MB.ENABLED, ROWNUM RN FROM 
  			  (SELECT /*+INDEX_DESC(MEMBER MEMBER_PK)*/
        		 M.USERNO, M.USERID, M.USERNAME, M.EMAIL, M.TEL, 
    				(SELECT ADDR||' '||DETAIL
     		   FROM ADDRESS A WHERE A.USERNO =  M.USERNO) ADDR
    		, M.ENABLED 
    	FROM MEMBER M WHERE USERNO > 0 ORDER BY USERNO DESC) MB WHERE ROWNUM <= #{pageNum} * #{amount} ]]>
    	<if test="keyword != null">
    		and userName like '%' || #{keyword} || '%'
    	</if>
    	<![CDATA[
    		AND ENABLED = 1)WHERE RN > (#{pageNum} -1) * #{amount}
    	]]>
	</select>
	
	
	<!-- 회원 기간 포함 인적사항 조회 -->
	<resultMap type="com.myproject.domain.MemberDomain" id="memberContactMap">
		<id property="userNo" column="userNo" />
		<result property="userNo" column="userNo"/>
		<result property="userId" column="userId"/>
		<result property="userPw" column="userPw"/>
		<result property="userName" column="userName"/>
		<result property="email" column="email"/>
		<result property="tel" column="tel"/>
		<result property="enabled" column="enabled"/>
		<collection property="address" resultMap="addressMap"></collection>
		<collection property="regInfo" resultMap="regInfoMap"></collection>
	</resultMap>
	<select id="memberContactList" resultMap="memberContactMap">
    	SELECT * FROM (
		    SELECT A.*, ROWNUM RN
		    FROM(
		        SELECT /*+INDEX_DESC(REGINFO IDX_REGINFO) */
		            USERNO, USERID, REGINFO.USERNAME, EMAIL, TEL, ENABLED, ENDDATE
		        FROM REGINFO LEFT OUTER JOIN MEMBER
		            USING(USERNO)
		        WHERE ENDDATE IS NOT NULL AND USERNO > 0
		        ORDER BY ENDDATE
		    ) A
		    <![CDATA[WHERE ROWNUM <= #{pageNum} * #{amount}]]>
		<if test="keyword != null">
    	AND USERNAME LIKE '%' || #{keyword} || '%'
    	</if>
		AND ENABLED = 1)WHERE RN > (#{pageNum} -1) * #{amount}
    	
	</select>
		
	<!-- 결제 내역 조회 -->
	<select id="paymentList" resultType="com.myproject.domain.PaymentDomain">
		<![CDATA[
		SELECT PAYNO, USERNO, REGNO, PAYDATE, PAYMENT, USERNAME, ITEMNAME 
		FROM (SELECT /*+INDEX_DESC(PAYMENT PAYMENT_PK)*/
				ROWNUM RN, PAYNO, USERNO, REGNO, PAYDATE, PAYMENT, USERNAME, ITEMNAME
				FROM PAYMENT WHERE 
		]]>
		<include refid="payCri"></include>
		<![CDATA[
			ROWNUM <= #{pageNum} * #{amount} AND PAYNO > 0
		]]>
		<![CDATA[
			)WHERE RN > (#{pageNum}-1) * #{amount}
		]]>
	</select>
	
	<!-- 등록 정보 조회 -->
	<select id="regProperties" resultType="com.myproject.domain.RegInfoDomain">
		<![CDATA[
			SELECT REGNO, USERNO, USERNAME, STARTDATE, ENDDATE, SEATNO, FNO, FEENAME 
			FROM (SELECT /*+INDEX_DESC(REGINFO REGINFO_PK)*/
				ROWNUM RN, REGNO, USERNO, USERNAME, STARTDATE, ENDDATE, SEATNO, FNO, FEENAME
				FROM REGINFO WHERE 
		]]>
		<include refid="regCri"></include>
		<![CDATA[
			ROWNUM <= #{pageNum} * #{amount} AND REGNO > 0
		]]>
		<![CDATA[
			)WHERE RN > (#{pageNum}-1) * #{amount}
		]]>
	</select>
	
	<!-- 등록 상세정보 조회 -->
	<select id="regDetail" resultType="com.myproject.domain.RegInfoDomain">
		SELECT * FROM REGINFO WHERE REGNO = #{regNo}
	</select>
	
	<!-- 회원 상세정보 조회 -->
	<select id="memberDetail" resultMap="memberMap">
		SELECT M.USERNO, M.USERID, M.USERNAME, M.EMAIL, M.TEL, 
    		(SELECT ADDR||' '||DETAIL
     		   FROM ADDRESS A WHERE A.USERNO =  M.USERNO) ADDR
    		, M.ENABLED 
    	FROM MEMBER M
    	WHERE USERNO = #{userNo}
	</select>

	<!-- 회원수정 주소 가져오기 -->
	<select id="memberAddr" resultType="com.myproject.domain.AddressDomain">
		SELECT * FROM ADDRESS WHERE USERNO = #{userNo}
	</select>
	
	<!-- 3일 남은 회원 조회 -->
	<select id="sendMessage"  resultType="com.myproject.domain.MemberDomain">
		SELECT * FROM MEMBER WHERE USERNO = (SELECT USERNO FROM REGINFO 
   		 WHERE TO_CHAR(ENDDATE,'YYYYMMDD') = TO_CHAR(SYSDATE,'YYYYMMDD')+3)
	</select>
	
	<!-- 회원 수 -->
	<select id="getMemberTotalCount" resultType="int">
		SELECT COUNT(*) FROM MEMBER WHERE USERNO > 0
		<if test="keyword != null">
    		and userName like '%' || #{keyword} || '%'
    	</if>
	</select>
	
	<!-- 연락 회원 수 -->
	<select id="getMemberContactTotalCount" resultType="int">
		SELECT COUNT(*) FROM MEMBER M WHERE (SELECT USERNO FROM REGINFO R WHERE M.USERNO = R.USERNO) IS NOT NULL
		<if test="keyword != null">
    		and userName like '%' || #{keyword} || '%'
    	</if>
	</select>
	
	<!-- 등록 정보 수-->
	<select id="getRegTotalCount" resultType="int">
		SELECT COUNT(*) FROM REGINFO WHERE 
		<include refid="regCri"></include>
		REGNO > 0
	</select>
	
	<!-- 결제 정보 수 -->
	<select id="getPaymentTotalCount" resultType="int">
		SELECT COUNT(*) FROM PAYMENT WHERE 
		<include refid="payCri"></include>
		PAYNO > 0
	</select>
	
	<!-- 빈 좌석 조회 -->
	<select id="getEmptySeatList" resultType="com.myproject.domain.SeatDomain">
		SELECT SNO, NAME FROM SEAT
		WHERE STATUS = 0 ORDER BY SNO
	</select>
	
	<!-- 공지사항 5개 불러오기 -->
	<select id="getNotiList" resultType="com.myproject.domain.BoardDomain">
		<![CDATA[
		SELECT BNO, CATEGORY, TITLE, CONTENT, WRITER, REGDATE, replyCnt, PARENTNO, GROUPNO
			FROM
			(
			SELECT /*+ INDEX_DESC(BOARD BOARD_PK) */
			ROWNUM RN, BNO, CATEGORY, TITLE, CONTENT, WRITER, REGDATE, REPLYCNT, PARENTNO, GROUPNO
			FROM
				BOARD
            WHERE
   		 bno>0 and CATEGORY = 1)
			WHERE RN < 6
			]]> 
	</select>
		
	<!-- Q&A 5개 불러오기 -->
	<select id="getQAList" resultType="com.myproject.domain.BoardDomain">
		<![CDATA[
		SELECT BNO, CATEGORY, TITLE, CONTENT, WRITER, REGDATE, replyCnt, PARENTNO, GROUPNO
			FROM
			(
			SELECT /*+ INDEX_DESC(BOARD BOARD_PK) */
			ROWNUM RN, BNO, CATEGORY, TITLE, CONTENT, WRITER, REGDATE, REPLYCNT, PARENTNO, GROUPNO
			FROM
				BOARD
            WHERE
   		 bno>0 and CATEGORY = 2
   		 START WITH parentno = 0
         CONNECT BY PRIOR bno = parentno
         ORDER SIBLINGS BY groupno DESC, bno ASC)
			WHERE RN < 6
			]]> 
	</select>
	
	<select id="getTotalImcome" resultType="int">
		SELECT SUM(PAYMENT) FROM PAYMENT
	</select>
		
	<!-- 회원 정보 수정 -->
	<delete id="deleteAddr">
		DELETE ADDRESS WHERE USERNO = #{userNo}
	</delete>
	<insert id="updateAddr">
		INSERT INTO ADDRESS 
		(ADDRNO, USERNO, POST, ADDR, DETAIL, EXTRA) 
		VALUES(SQL_ADDRESS.NEXTVAL, 
		#{userNo}, #{post}, #{addr}, #{detail}, #{extra})
	</insert>
	<update id="updateMember">
		UPDATE MEMBER SET 
			TEL = #{tel},
			EMAIL = #{email},
			USERNAME = #{userName}
		WHERE USERNO = #{userNo}
	</update>
	
	
	<!-- 등록 정보 수정 -->
	<update id="updateRegPP">
		UPDATE REGINFO SET 
			SEATNO = #{seatNo},
		WHERE USERNO = #{userNo}
	</update>
	
	<!-- 좌석 정보 수정 -->
	<update id="deleteSeat">
		UPDATE SEAT
		SET USERNO = 0
		,STATUS = 0
		WHERE USERNO = #{userNo}
	</update>
	<update id="updateSeat">
		UPDATE SEAT SET 
			USERNO = #{userNo},
			STATUS = 1
		WHERE SNO = #{seatNo} 
	</update>
	
	
	<!-- 회원 중 좌석 미등록 회원 목록 페이징처리 포함 -->
		<resultMap type="com.myproject.domain.MemberDomain" id="unRegMemberMap">
		<id property="userNo" column="userNo" />
		<result property="userNo" column="userNo"/>
		<result property="userId" column="userId"/>
		<result property="userPw" column="userPw"/>
		<result property="userName" column="userName"/>
		<result property="email" column="email"/>
		<result property="tel" column="tel"/>
		<result property="enabled" column="enabled"/>
		<collection property="address" resultMap="addressMap2"></collection>
	</resultMap>
	<resultMap type="com.myproject.domain.AddressDomain" id="addressMap2">
		<result property="addrNo" column="addrNo"/>
		<result property="userNo" column="userNo"/>
		<result property="post" column="post"/>
		<result property="addr" column="addr"/>
		<result property="detail" column="detail"/>
		<result property="extra" column="extra"/>
	</resultMap>
	<select id="getUnregList" resultMap="unRegMemberMap">
    SELECT * FROM (
    	SELECT MB.USERNO, MB.USERID, MB.USERNAME, MB.EMAIL, MB.TEL, MB.ADDR, MB.ENABLED, ROWNUM RN
    	FROM
        	(SELECT /*+INDEX_DESC(MEMBER MEMBER_PK)*/
				M.USERNO, M.USERID, M.USERNAME, M.EMAIL, M.TEL,
                	(SELECT ADDR|| ' ' || DETAIL
                 	FROM ADDRESS A WHERE A.USERNO = M.USERNO) ADDR
            	, M.ENABLED
            	FROM MEMBER M WHERE USERNO>0 ORDER BY USERNO) MB
	    WHERE USERNO IN (SELECT USERNO FROM MEMBER MINUS SELECT USERNO FROM REGINFO)
	    <if test="keyword != null">
    		and userName like '%' || #{keyword} || '%'
    	</if>
	    <![CDATA[AND ROWNUM <= #{pageNum} * #{amount}]]>
	)
	WHERE RN > (#{pageNum} -1) * #{amount}	
	</select>
	
	<!-- 전체 좌석에서 이용 중인 상태와 회원 이름과 만료일 목록 -->
	<select id="getSeatPlanList" resultType="map">
		SELECT S.SNO, R.USERNO, M.USERNAME, R.ENDDATE, S.STATUS FROM SEAT S
		LEFT OUTER JOIN REGINFO R
		ON S.SNO = R.SEATNO
		LEFT OUTER JOIN MEMBER M
		ON M.USERNO = S.USERNO
		ORDER BY SNO
	</select>
	
	<!-- 이용 중인 회원 등록 정보 삭제 --> <!-- 좌석과 트랜잭션 처리 되어야 함. -->
	<delete id="deleteRegInfo">
	DELETE FROM REGINFO WHERE USERNO = #{userNo}
	</delete>
	
</mapper>